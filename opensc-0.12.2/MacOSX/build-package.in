#!/bin/bash
set -ex
OSX_RELEASE=${1:-10.11}
INTEL_ONLY=${INTEL_ONLY:-no}
test -x ./configure || ./bootstrap
BUILDPATH=${PWD}

SDKS_PATH="$(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs"
SDK_PATH="${SDK_PATH:-$SDKS_PATH/$(ls -1 ${SDKS_PATH} | sort -n -k2 -t. -r | head -1)}"

# Set SDK path
export CFLAGS="-isysroot $SDK_PATH -arch i386 -arch x86_64 -mmacosx-version-min=10.7"

# OpenSSL is deprecated on OSX since 10.7 and that generates lots of
# warnings and there is no alternative option.
# Just ignore these warning for now by silencing them.
CFLAGS="$CFLAGS -Wno-deprecated-declarations -Wno-unused-parameter"

PATH=$PATH:/usr/local/git/bin
export SED=/usr/bin/sed
PREFIX=/Library/latvia-eid
export PKG_CONFIG_PATH=/usr/lib/pkgconfig
DYLD_LIBRARY_PATH=${PWD}/../openssl_osx/lib
export DYLD_LIBRARY_PATH

OPENSSL_CFLAGS="-I$(PWD)/../openssl_osx/include"
OPENSSL_LIBS="-L$(PWD)/../openssl_osx/lib -lcrypto"
export OPENSSL_CFLAGS
export OPENSSL_LIBS

make clean
./configure --prefix=$PREFIX \
--sysconfdir=$PREFIX/etc \
--disable-dependency-tracking \
--enable-shared \
--disable-static \
--enable-strict \
--disable-assert

if !(test -e src/libopensc/.libs/libotlvopensc.dylib && (file src/libopensc/.libs/libotlvopensc.dylib | grep $required_arch)); then
	make clean
fi

# compile
make -j 2

# copy files
rm -rf target
make install DESTDIR=${BUILDPATH}/target

# remove garbage
rm -f target/Library/latvia-eid/lib/*.la
rm -f target/Library/latvia-eid/share/Latvia-eID-Middleware/*.profile

# generate .bundle (required by Adobe Acrobat)
./MacOSX/libtool-bundle target/Library/latvia-eid/lib/pkcs11/otlv-pkcs11.so target/Library/latvia-eid/lib

cp target/Library/latvia-eid/lib/pkcs11/otlv-pkcs11.so target/Library/latvia-eid/lib/otlv-pkcs11.dylib
cp ../latvia-eid.conf.nix target/Library/latvia-eid/etc/latvia-eid.conf
cp ../openssl_osx/lib/libcrypto.0.9.8.dylib target/Library/latvia-eid/lib/.
cp ../openssl_osx/lib/libssl.0.9.8.dylib target/Library/latvia-eid/lib/.

mkdir -p target/Library/latvia-eid/share/Latvia-eID-Middleware/
cp ../CHANGES target/Library/latvia-eid/share/Latvia-eID-Middleware/.

# Check out OpenSC.tokend, if not already fetched.
if ! test -e OpenSC.tokend; then
	git clone http://github.com/OpenSC/OpenSC.tokend.git

	# Refresh remote branches, in case the script has changed the active branch and existing buildslave checkout is u#sed.
	git --git-dir OpenSC.tokend/.git --work-tree OpenSC.tokend checkout master

	# Fix "error: member reference base type 'u8 *' (aka 'unsigned char *') is not a structure or union"
	# See: https://github.com/OpenSC/OpenSC.tokend/commit/5adb973066146f1f59131bc96a2add1405749c1a
	git --git-dir OpenSC.tokend/.git --work-tree OpenSC.tokend revert --no-commit 5adb973066146f1f59131bc96a2add1405749c1a
fi

# Create the symlink to OpenSC sources
test -L OpenSC.tokend/build/opensc-src || ln -sf ${BUILDPATH}/src OpenSC.tokend/build/opensc-src

# Symlink libotlvopensc.dylib to libopensc.dylib in src/libopensc/.libs
test -L src/libopensc/.libs/libopensc.dylib || ln -sf ${BUILDPATH}/src/libopensc/.libs/libotlvopensc.dylib src/libopensc/.libs/libopensc.dylib

# Build and copy OpenSC.tokend
xcodebuild -target OpenSC -configuration Deployment -sdk macosx -project OpenSC.tokend/Tokend.xcodeproj install DSTROOT=${PWD}/target

mkdir -p target/Library/Security/tokend
cp -R OpenSC.tokend/build/OpenSC.tokend target/Library/Security/tokend/OTLVID.tokend
rm -rf target/System/Library/Security/tokend/OTLVID.tokend/Contents/MacOS/OTLVID_debug





# @todo Add support for the PinTool build
exit

# Build PinTool
cd ../PinTool
make -f Makefile.osx clean
make -f Makefile.osx

cd ../opensc-0.12.2

# The "UnInstaller"
mkdir -p target/usr/local/bin
cp MacOSX/opensc-uninstall target/usr/local/bin/latvia-eid-uninstall

mkdir -p target/Applications
cp -R ../PinTool/Latvia-eID-PinTool.app target/Applications/.
rm -fr `find target/Applications/Latvia-eID-PinTool.app | grep .svn`

# Build installer package
/Developer/Applications/Utilities/PackageMaker.app/Contents/MacOS/PackageMaker \
-r target \
-o Latvia-eid-middleware_1.1.0-${OSX_RELEASE}.pkg \
-t "Latvia-eid Middleware 1.1.0 for Mac OS X ${OSX_RELEASE}" \
-i org.latvia-eid.mac \
-n "1.1.0" \
-g 10.4 \
-b \
-v \
--no-relocate \
-e MacOSX/${OSX_RELEASE}/resources \
-s MacOSX/${OSX_RELEASE}/scripts

# Create .dmg
rm -f Latvia-eid-middleware_1.1.0-${OSX_RELEASE}.dmg
TIMESTAMP=$(date +%Y.%m.%d)
hdiutil create -srcfolder Latvia-eid-middleware_1.1.0-${OSX_RELEASE}.pkg -volname "Latvia-eid Middleware 1.1.0 for Mac OS X ${OSX_RELEASE} (${TIMESTAMP})" Latvia-eid-middleware_1.1.0-${OSX_RELEASE}.dmg
